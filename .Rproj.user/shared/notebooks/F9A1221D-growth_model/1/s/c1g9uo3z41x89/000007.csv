"0","logistic_model <- function(r = 1, K = 100, N0 = 10, nsteps = 50, c = 0.5, p = 10, n = 5, m = 0.2){"
"0","  # Define vector of time, N, and C"
"0","  time <- c(0:nsteps)"
"0","  # N <- numeric(length = length(time))"
"0","  N <- matrix(0, ncol = n, nrow = length(time))"
"0","  C <- N"
"0","  # Assign initial population size"
"0","  N[1,] <- N0"
"0","  "
"0","  # Create pointers"
"0","  left_pointer <- c(n, 1:(n-1))"
"0","  right_pointer <- c(2:n, 1)"
"0","  "
"0","  c_mpa <- c(c, 0, 0, 0, c)"
"0","  # Start for loop to simulate population"
"0","  for (t in 1:nsteps) {"
"0","    "
"0","    N_in <- m * (N[t, left_pointer] + N[t, right_pointer]) / 2"
"0","    N_out <- m * N[t,]"
"0","    C[t, ] <- c_mpa * N[t, ]"
"0","    "
"0","    N[t+1,] <- N[t,] + (r * N[t,] * (1 - (N[t,] / K))) - C[t,] + N_in - N_out"
"0","  }"
"0","  # End for loop"
"0","  "
"0","  # Create a catch dataframe"
"0","  catch_df <- data.frame(time, C) %>% "
"0","    gather(parcel, C, -time)"
"0","  "
"0","  # Create data.frame with simulation results"
"0","  simul <- data.frame(time, N) %>% "
"0","    gather(parcel, N, -time) %>% "
"0","    left_join(catch_df, by = c(""time"", ""parcel"")) %>% "
"0","    mutate(R = p * C,"
"0","           class = ifelse(parcel %in% c(""X3"", ""X2"", ""X4""), ""reserve"", ""fishng""))"
"0","    "
"0","  return(simul)"
"0","}"
